version: "3"

volumes:
  local_postgres_data: {}
  local_redis_data: {}

services:
  app: &app
    build:
      context: .
      dockerfile: ./compose/local/app/Dockerfile
    image: kanban_boards_local_app
    container_name: kanban_boards
    depends_on:
      - postgres
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.app
      - ./.envs/.local/.postgres
      - ./.envs/.local/.celery
    ports:
      - "8000:8000"
    command: /start.sh

  postgres:
    image: postgres:15.1-alpine
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "5432:5432"

  redis:
    image: redis:7.0.7-alpine
    container_name: redis
    volumes:
      - local_redis_data:/var/lib/redis/data
    ports:
      - "6379:6379"

  celeryworker:
    # The celery worker container uses the same dockerfile as the app,
    # because it's already listed as a dependency
    <<: *app
    image: kanban_boards_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker.sh

  celerybeat:
    # The celery beat container uses the same dockerfile as the app,
    # because it's already listed as a dependency
    <<: *app
    image: kanban_boards_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat.sh

  flower:
    # The flower container uses the same dockerfile as the app,
    # because it's already listed as a dependency
    <<: *app
    image: kanban_boards_local_flower
    container_name: flower
    depends_on:
      - redis
      - postgres
    ports:
      - "5555:5555"
    command: /start-flower.sh

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "1025:1025" # smtp server
      - "8025:8025" # web ui
